{"id":"../node_modules/date-fns/getISOWeek.js","dependencies":[{"name":"/home/qelso/dev/git-repos/will-it-miss/package.json","includedInParent":true,"mtime":1715094091542},{"name":"/home/qelso/dev/git-repos/will-it-miss/node_modules/date-fns/package.json","includedInParent":true,"mtime":1715091020293},{"name":"./constants.js","loc":{"line":3,"column":21,"index":68},"parent":"/home/qelso/dev/git-repos/will-it-miss/node_modules/date-fns/getISOWeek.js","resolved":"/home/qelso/dev/git-repos/will-it-miss/node_modules/date-fns/constants.js"},{"name":"./startOfISOWeek.js","loc":{"line":4,"column":22,"index":109},"parent":"/home/qelso/dev/git-repos/will-it-miss/node_modules/date-fns/getISOWeek.js","resolved":"/home/qelso/dev/git-repos/will-it-miss/node_modules/date-fns/startOfISOWeek.js"},{"name":"./startOfISOWeekYear.js","loc":{"line":5,"column":22,"index":155},"parent":"/home/qelso/dev/git-repos/will-it-miss/node_modules/date-fns/getISOWeek.js","resolved":"/home/qelso/dev/git-repos/will-it-miss/node_modules/date-fns/startOfISOWeekYear.js"},{"name":"./toDate.js","loc":{"line":6,"column":22,"index":205},"parent":"/home/qelso/dev/git-repos/will-it-miss/node_modules/date-fns/getISOWeek.js","resolved":"/home/qelso/dev/git-repos/will-it-miss/node_modules/date-fns/toDate.js"}],"generated":{"js":"\"use strict\";\nexports.getISOWeek = getISOWeek;\nvar _index = require(\"./constants.js\");\nvar _index2 = require(\"./startOfISOWeek.js\");\nvar _index3 = require(\"./startOfISOWeekYear.js\");\nvar _index4 = require(\"./toDate.js\");\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nfunction getISOWeek(date) {\n  const _date = (0, _index4.toDate)(date);\n  const diff =\n    +(0, _index2.startOfISOWeek)(_date) -\n    +(0, _index3.startOfISOWeekYear)(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / _index.millisecondsInWeek) + 1;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/date-fns/getISOWeek.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"../node_modules/date-fns/getISOWeek.js":"\"use strict\";\nexports.getISOWeek = getISOWeek;\nvar _index = require(\"./constants.js\");\nvar _index2 = require(\"./startOfISOWeek.js\");\nvar _index3 = require(\"./startOfISOWeekYear.js\");\nvar _index4 = require(\"./toDate.js\");\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nfunction getISOWeek(date) {\n  const _date = (0, _index4.toDate)(date);\n  const diff =\n    +(0, _index2.startOfISOWeek)(_date) -\n    +(0, _index3.startOfISOWeekYear)(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / _index.millisecondsInWeek) + 1;\n}\n"},"lineCount":40}},"error":null,"hash":"8d2283ea4cfe7d51345216494a0f16dd","cacheData":{"env":{}}}